{
	"info": {
		"_postman_id": "0545982e-b25f-4407-97b4-d45a471877ef",
		"name": "Auth",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Token issue",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);\r",
							"postman.setEnvironmentVariable (\"token\", jsonData.token);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"pm.test(\"Token include correct string\", function () {\r",
							"    pm.expect(jsonData.token).to.include(\"eyJhbGciOiJSUzI1NiIsInppcCI6IkRFRiJ9\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "content-type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "DFE-APP-MNEMO",
						"value": "Restapp",
						"type": "text"
					},
					{
						"key": "DFE_APP_VER",
						"value": "1.1.3",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"username\":\"tushkanova\", \"password\":\"123\"}"
				},
				"url": {
					"raw": "{{hostTest}}/authentication-web/api/auth",
					"host": [
						"{{hostTest}}"
					],
					"path": [
						"authentication-web",
						"api",
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "Token validation",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 202\", function () {\r",
							"    pm.response.to.have.status(202);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.test(\"Username is true\", function () {\r",
							"    pm.expect(jsonData.subject).to.eql(\"tushkanova\");\r",
							"});\r",
							"pm.test(\"Role is true\", function () {\r",
							"    pm.expect(jsonData.roles).to.eql([\"User\"]);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{hostTest}}/authentication-web/api/auth/validate?token={{token}}",
					"host": [
						"{{hostTest}}"
					],
					"path": [
						"authentication-web",
						"api",
						"auth",
						"validate"
					],
					"query": [
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Signature certificate",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Cookie JSESSIONID is true\", () => {\r",
							"    pm.expect(pm.cookies.has('JSESSIONID')).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Body contains string\", () => {\r",
							"    pm.expect(pm.response.text()).to.include(\"Westeros\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "",
						"value": "",
						"type": "text",
						"disabled": true
					}
				],
				"url": {
					"raw": "{{hostTest}}/authentication-web/api/auth/certificate",
					"host": [
						"{{hostTest}}"
					],
					"path": [
						"authentication-web",
						"api",
						"auth",
						"certificate"
					]
				}
			},
			"response": []
		},
		{
			"name": "Token renewal",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body include correct string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"eyJhbGciOiJSUzI1NiIsInppcCI6IkRFRiJ9\");\r",
							"}); "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{hostTest}}/authentication-web/api/auth",
					"host": [
						"{{hostTest}}"
					],
					"path": [
						"authentication-web",
						"api",
						"auth"
					]
				}
			},
			"response": []
		}
	]
}