{
	"info": {
		"_postman_id": "ca14fada-daf7-4ed7-939f-2f2612dd11e1",
		"name": "Constants",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Creating a constant",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Mnemo is correct\", function () {\r",
							"    pm.response.to.have.jsonBody(\"mnemo\", \"sklad.proizvodstva.noDate1\");\r",
							"});\r",
							"\r",
							"pm.test(\"PeriodicalDat is correct\", function () {\r",
							"    pm.response.to.have.jsonBody(\"periodicalDate\", \"null\");\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"//pm.test(\"Mnemo is true\", function () {\r",
							"//    var jsonData = pm.response.json();\r",
							"//    pm.expect(jsonData.mnemo).to.include(\"sklad.proizvodstva\");\r",
							"//});\r",
							"\r",
							"//pm.test(\"periodicalDate is null\", function () {\r",
							"//    var jsonData = pm.response.json();\r",
							"//    pm.expect(jsonData.periodicalDate).to.eql(\"null\");\r",
							"//});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "content-type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"mnemo\" : \"sklad.proizvodstva.noDate1\",\r\n\"value\" : \"sklad proizvodstva 1\"\r\n}"
				},
				"url": {
					"raw": "{{hostTest}}/rest/constant",
					"host": [
						"{{hostTest}}"
					],
					"path": [
						"rest",
						"constant"
					]
				}
			},
			"response": []
		},
		{
			"name": "Creating a constant with date dd.MM.yyyy'T'HH:mm:ss",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Mnemo is correct\", function () {\r",
							"    pm.response.to.have.jsonBody(\"mnemo\", \"buh.calendar\");\r",
							"});\r",
							"\r",
							"pm.test(\"PeriodicalDate is correct\", function () {\r",
							"    pm.response.to.have.jsonBody(\"periodicalDate\", \"Tue Dec 01 13:11:40 MSK 2020\");\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "content-type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"mnemo\" : \"buh.calendar\",\r\n\"periodicalDate\" : \"01.12.2020T13:11:40\",\r\n\"value\" : \"sklad calendar \"\r\n}"
				},
				"url": {
					"raw": "{{hostTest}}/rest/constant",
					"host": [
						"{{hostTest}}"
					],
					"path": [
						"rest",
						"constant"
					]
				}
			},
			"response": []
		},
		{
			"name": "Creating a constant with date  UTC+0 milliseconds",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Mnemo is correct\", function () {\r",
							"    pm.response.to.have.jsonBody(\"mnemo\", \"buh.calendar2\");\r",
							"});\r",
							"\r",
							"pm.test(\"PeriodicalDat is correct\", function () {\r",
							"    pm.response.to.have.jsonBody(\"periodicalDate\", \"Wed Nov 21 07:38:20 MSK 2001\");\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "content-type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"mnemo\" : \"buh.calendar2\",\r\n\"periodicalDate\" : \"1006317500000\",\r\n\"value\" : \"sklad calendar \"\r\n}"
				},
				"url": {
					"raw": "{{hostTest}}/rest/constant",
					"host": [
						"{{hostTest}}"
					],
					"path": [
						"rest",
						"constant"
					]
				}
			},
			"response": []
		},
		{
			"name": "Getting a list of constants",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"responseJson = JSON.parse(responseBody);\r",
							"var list = responseJson.length;\r",
							"tests[\"Validate service retuns 3 records\"] = list >= 3\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "accept-charset",
						"type": "text",
						"value": "utf-8"
					},
					{
						"key": "DFE-APP-MNEMO",
						"value": "Restapp",
						"type": "text"
					},
					{
						"key": "DFE-APP-VER",
						"value": "1.1.3",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{hostTest}}/rest/constant/list",
					"host": [
						"{{hostTest}}"
					],
					"path": [
						"rest",
						"constant",
						"list"
					]
				}
			},
			"response": []
		},
		{
			"name": "Reading the constant",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Mnemo is true\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.mnemo).to.eql(\"sklad.proizvodstva.noDate1\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "accept-charset",
						"type": "text",
						"value": "utf-8"
					}
				],
				"url": {
					"raw": "{{hostTest}}/rest/constant/sklad.proizvodstva.noDate1",
					"host": [
						"{{hostTest}}"
					],
					"path": [
						"rest",
						"constant",
						"sklad.proizvodstva.noDate1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Reading the constant with date dd.MM.yyyy'T'HH:mm:ss",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Mnemo is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.mnemo).to.eql(\"buh.calendar\");\r",
							"});\r",
							"\r",
							"pm.test(\"PeriodicalDate is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.periodicalDate).to.eql(\"1606817500000\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "accept-charset",
						"type": "text",
						"value": "utf-8"
					}
				],
				"url": {
					"raw": "{{hostTest}}/rest/constant/buh.calendar?periodicalDate=01.12.2020T13:11:40",
					"host": [
						"{{hostTest}}"
					],
					"path": [
						"rest",
						"constant",
						"buh.calendar"
					],
					"query": [
						{
							"key": "periodicalDate",
							"value": "01.12.2020T13:11:40"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Reading the constant with date UTC+0 milliseconds",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Mnemo is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.mnemo).to.eql(\"buh.calendar2\");\r",
							"});\r",
							"\r",
							"pm.test(\"PeriodicalDate is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.periodicalDate).to.eql(\"1006317500000\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "accept-charset",
						"type": "text",
						"value": "utf-8"
					}
				],
				"url": {
					"raw": "{{hostTest}}/rest/constant/buh.calendar2?periodicalDate=1006317500000",
					"host": [
						"{{hostTest}}"
					],
					"path": [
						"rest",
						"constant",
						"buh.calendar2"
					],
					"query": [
						{
							"key": "periodicalDate",
							"value": "1006317500000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Updating the constant",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body is empty\", function () {\r",
							"    pm.response.to.have.body(\"\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "content-type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"mnemo\" : \"sklad.proizvodstva.noDate1\",\r\n\"value\" : \"sklad proizvodstva 2\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{hostTest}}/rest/constant",
					"host": [
						"{{hostTest}}"
					],
					"path": [
						"rest",
						"constant"
					]
				}
			},
			"response": []
		},
		{
			"name": "Updating the constant with date dd.MM.yyyy'T'HH:mm:ss",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body is empty\", function () {\r",
							"    pm.response.to.have.body(\"\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "content-type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"mnemo\" : \"buh.calendar\",\r\n\"periodicalDate\" : \"01.12.2020T13:11:40\",\r\n\"value\" : \"sklad calendar1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{hostTest}}/rest/constant",
					"host": [
						"{{hostTest}}"
					],
					"path": [
						"rest",
						"constant"
					]
				}
			},
			"response": []
		},
		{
			"name": "Updating the constant with date UTC+0 milliseconds",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body is empty\", function () {\r",
							"    pm.response.to.have.body(\"\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "content-type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"mnemo\" : \"buh.calendar2\",\r\n\"periodicalDate\" : \"1006317500000\",\r\n\"value\" : \"sklad calendar2\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{hostTest}}/rest/constant",
					"host": [
						"{{hostTest}}"
					],
					"path": [
						"rest",
						"constant"
					]
				}
			},
			"response": []
		},
		{
			"name": "Reading the constant after updating",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Mnemo is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.mnemo).to.eql(\"sklad.proizvodstva.noDate1\");\r",
							"});\r",
							"\r",
							"pm.test(\"Value is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.value).to.eql(\"sklad proizvodstva 2\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "accept-charset",
						"type": "text",
						"value": "utf-8"
					}
				],
				"url": {
					"raw": "{{hostTest}}/rest/constant/sklad.proizvodstva.noDate1",
					"host": [
						"{{hostTest}}"
					],
					"path": [
						"rest",
						"constant",
						"sklad.proizvodstva.noDate1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Reading the constant with date dd.MM.yyyy'T'HH:mm:ss after updating",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Mnemo is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.mnemo).to.eql(\"buh.calendar\");\r",
							"});\r",
							"\r",
							"pm.test(\"PeriodicalDate is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.periodicalDate).to.eql(\"1606817500000\");\r",
							"});\r",
							"\r",
							"pm.test(\"Value is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.value).to.eql(\"sklad calendar1\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "accept-charset",
						"type": "text",
						"value": "utf-8"
					}
				],
				"url": {
					"raw": "{{hostTest}}/rest/constant/buh.calendar?periodicalDate=01.12.2020T13:11:40",
					"host": [
						"{{hostTest}}"
					],
					"path": [
						"rest",
						"constant",
						"buh.calendar"
					],
					"query": [
						{
							"key": "periodicalDate",
							"value": "01.12.2020T13:11:40"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Reading the constant with date UTC+0 milliseconds after updating",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Mnemo is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.mnemo).to.eql(\"buh.calendar2\");\r",
							"});\r",
							"\r",
							"pm.test(\"PeriodicalDate is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.periodicalDate).to.eql(\"1006317500000\");\r",
							"});\r",
							"\r",
							"pm.test(\"Value is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.value).to.eql(\"sklad calendar2\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "accept-charset",
						"type": "text",
						"value": "utf-8"
					}
				],
				"url": {
					"raw": "{{hostTest}}/rest/constant/buh.calendar2?periodicalDate=1006317500000",
					"host": [
						"{{hostTest}}"
					],
					"path": [
						"rest",
						"constant",
						"buh.calendar2"
					],
					"query": [
						{
							"key": "periodicalDate",
							"value": "1006317500000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete the constant",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body is empty\", function () {\r",
							"    pm.response.to.have.body(\"\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{hostTest}}/rest/constant/sklad.proizvodstva.noDate1",
					"host": [
						"{{hostTest}}"
					],
					"path": [
						"rest",
						"constant",
						"sklad.proizvodstva.noDate1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete the constant with date date dd.MM.yyyy'T'HH:mm:ss",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body is empty\", function () {\r",
							"    pm.response.to.have.body(\"\"); \r",
							"});\r",
							"  \r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{hostTest}}/rest/constant/buh.calendar?periodicalDate=01.12.2020T13:11:40",
					"host": [
						"{{hostTest}}"
					],
					"path": [
						"rest",
						"constant",
						"buh.calendar"
					],
					"query": [
						{
							"key": "periodicalDate",
							"value": "01.12.2020T13:11:40"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete the constant with date UTC+0 milliseconds",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body is empty\", function () {\r",
							"    pm.response.to.have.body(\"\"); \r",
							"});\r",
							"  \r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{hostTest}}/rest/constant/buh.calendar2?periodicalDate=1006317500000",
					"host": [
						"{{hostTest}}"
					],
					"path": [
						"rest",
						"constant",
						"buh.calendar2"
					],
					"query": [
						{
							"key": "periodicalDate",
							"value": "1006317500000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Reading the constant after delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "accept-charset",
						"type": "text",
						"value": "utf-8"
					}
				],
				"url": {
					"raw": "{{hostTest}}/rest/constant/sklad.proizvodstva.noDate1",
					"host": [
						"{{hostTest}}"
					],
					"path": [
						"rest",
						"constant",
						"sklad.proizvodstva.noDate1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Reading the constant with date dd.MM.yyyy'T'HH:mm:ss after delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "accept-charset",
						"type": "text",
						"value": "utf-8"
					}
				],
				"url": {
					"raw": "{{hostTest}}/rest/constant/buh.calendar?periodicalDate=01.12.2020T13:11:40",
					"host": [
						"{{hostTest}}"
					],
					"path": [
						"rest",
						"constant",
						"buh.calendar"
					],
					"query": [
						{
							"key": "periodicalDate",
							"value": "01.12.2020T13:11:40"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Reading the constant with date UTC+0 milliseconds after delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "accept-charset",
						"type": "text",
						"value": "utf-8"
					}
				],
				"url": {
					"raw": "{{hostTest}}/rest/constant/buh.calendar2?periodicalDate=1006317500000",
					"host": [
						"{{hostTest}}"
					],
					"path": [
						"rest",
						"constant",
						"buh.calendar2"
					],
					"query": [
						{
							"key": "periodicalDate",
							"value": "1006317500000"
						}
					]
				}
			},
			"response": []
		}
	]
}